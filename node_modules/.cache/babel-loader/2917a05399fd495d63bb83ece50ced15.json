{"ast":null,"code":"import { filters, modes } from './constants';\nexport default function mask(target) {\n  let mask = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';\n  let filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : filters.NUMBERS;\n  let mode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : modes.AUTO;\n  let placeholder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let result = '';\n  let index = 0;\n  let repeater = null;\n\n  try {\n    target = target.toString();\n    placeholder = placeholder.toString();\n  } catch (e) {}\n\n  const reverse = mode === 'auto' ? /^[^?]*?\\*.*$/.test((Array.isArray(mask) ? mask[0] : mask).replace(/\\{\\d+\\|.+\\}/i, '*')) || placeholder : mode === 'reverse';\n\n  if (target && target.length) {\n    if (reverse) target = target.split('').reverse().join('');\n    if (filter) target = target.replace(filter, '');\n    if (placeholder) target = target.replace(new RegExp('[' + placeholder + ']+$', 'gim'), '');\n  }\n\n  if (target === '' || !target) return '';\n\n  if (Array.isArray(mask)) {\n    mask.sort((a, b) => a.replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim, '').length - b.replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim, '').length);\n\n    for (let c = 0; c < mask.length; c++) {\n      if (mask[c].replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim, '').length >= target.length || c === mask.length - 1) {\n        mask = mask[c];\n        break;\n      }\n    }\n  }\n\n  if (/\\{\\d+\\|.+\\}/i.test(mask)) {\n    repeater = mask.match(/\\{(\\d+)\\|(.+)\\}/i);\n    mask = mask.replace(/\\{\\d+\\|.+\\}/i, '*');\n  }\n\n  if (reverse && /^[^*]*$/gim.test(mask) && target.length > mask.replace(/[^?]/gim, '').length) {\n    target = target.substring(1);\n  }\n\n  loop: for (let c = reverse ? mask.length - 1 : 0; reverse ? c >= 0 : c < mask.length; reverse ? c-- : c++) {\n    switch (mask.charAt(c)) {\n      case '?':\n        if (target.charAt(index)) {\n          if (reverse) result = target.charAt(index) + result;else result += target.charAt(index);\n          index++;\n        } else if (placeholder) {\n          if (reverse) result = placeholder + result;else result += placeholder;\n        } else break loop;\n\n        break;\n\n      case '*':\n        const remaining = repeater ? (target.substring(index).match(new RegExp('.{1,' + repeater[1] + '}', 'g')) || []).join(repeater[2]) : target.substring(index);\n        if (!remaining && !placeholder) break loop;\n\n        if (reverse) {\n          const finisher = mask.substring(0, c).replace(/[?*]/gim, '');\n          return finisher + (remaining ? remaining.split('').reverse().join('') : placeholder || '') + result;\n        } else {\n          const finisher = mask.substring(c + 1).replace(/[?*]/gim, '');\n          return result + (remaining ? remaining : placeholder || '') + finisher;\n        }\n\n      default:\n        if (reverse) result = mask.charAt(c) + result;else result += mask.charAt(c);\n        break;\n    }\n  }\n\n  const last = reverse ? result.charAt(0) : result.charAt(result.length - 1);\n\n  if (reverse && last !== target.charAt(index - 1) && last !== mask.charAt(0) && last !== placeholder) {\n    result = result.substring(1);\n  } else if (!reverse && last !== target.charAt(index - 1) && last !== mask.charAt(mask.length - 1) && last !== placeholder) {\n    result = result.slice(0, -1);\n  }\n\n  return result;\n}\nexport function applyMask(target, config) {\n  return mask(target, config.mask, config.filter, config.mode, config.placeholder);\n}","map":{"version":3,"names":["filters","modes","mask","target","filter","NUMBERS","mode","AUTO","placeholder","result","index","repeater","toString","e","reverse","test","Array","isArray","replace","length","split","join","RegExp","sort","a","b","c","match","substring","loop","charAt","remaining","finisher","last","slice","applyMask","config"],"sources":["C:/Users/Guilh/OneDrive/Área de Trabalho/form/form/node_modules/mask-hooks/src/mask.js"],"sourcesContent":["import { filters, modes } from './constants';\r\n\r\n\r\nexport default function mask(target, mask = '*', filter = filters.NUMBERS, mode = modes.AUTO, placeholder = null) {\r\n\r\n    let result   = '';\r\n\tlet index    = 0;\r\n    let repeater = null;\r\n\r\n    try {\r\n        target = target.toString();\r\n        placeholder = placeholder.toString();\r\n    } catch(e) {}\r\n\r\n    const reverse = (mode === 'auto') ? (/^[^?]*?\\*.*$/.test((Array.isArray(mask) ? mask[0] : mask).replace(/\\{\\d+\\|.+\\}/i, '*')) || placeholder) : (mode === 'reverse');\r\n\r\n    if(target && target.length) {\r\n        if(reverse)     target = target.split('').reverse().join('');\r\n        if(filter)      target = target.replace(filter, '');\r\n        if(placeholder) target = target.replace(new RegExp('[' + placeholder + ']+$','gim'), '');\r\n    }\r\n\r\n    if(target === '' || !target) return '';\r\n    \r\n\r\n    if(Array.isArray(mask)) {\r\n        mask.sort((a, b) => a.replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim,'').length - b.replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim,'').length);\r\n        \r\n        for(let c = 0; c < mask.length; c++) {\r\n            if(mask[c].replace(/\\{\\d+\\|.+\\}/i, '*').replace(/[^?*]/gim,'').length >= target.length || c === (mask.length - 1)) {\r\n                mask = mask[c];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    if(/\\{\\d+\\|.+\\}/i.test(mask)) {\r\n        repeater = mask.match(/\\{(\\d+)\\|(.+)\\}/i);\r\n        mask     = mask.replace(/\\{\\d+\\|.+\\}/i, '*');\r\n    }\r\n\r\n    if(reverse && /^[^*]*$/gim.test(mask) && target.length > mask.replace(/[^?]/gim,'').length) {\r\n        target = target.substring(1);\r\n    }\r\n\t\r\n\tloop: for (\r\n        let c = reverse ? (mask.length-1) : 0;\r\n        reverse ? c >= 0 : c < mask.length;\r\n        reverse ? c--    : c++\r\n    ) {\r\n\t  switch(mask.charAt(c)) {\r\n\t\t  \r\n\t\t  case '?':\r\n        \r\n\t\t  \tif(target.charAt(index)) {\r\n                if(reverse) result =  target.charAt(index) + result;\r\n\t\t\t    else        result += target.charAt(index);\r\n\t\t\t\tindex++;\r\n\t\t\t} else if(placeholder) {\r\n                if(reverse) result  = placeholder + result;\r\n                else        result += placeholder;\r\n            } else break loop;\r\n            \r\n\t\t\tbreak;\r\n\t\t  \r\n\t\t  case '*':\r\n\t\t  \t\r\n            const remaining = repeater\r\n                ? (target.substring(index).match(new RegExp('.{1,' + repeater[1] + '}', 'g')) || []).join(repeater[2])\r\n                : target.substring(index);\r\n\r\n            if(!remaining && !placeholder) break loop;\r\n\r\n            if(reverse) {\r\n                const finisher = mask.substring(0, c).replace(/[?*]/gim,'');\r\n                return finisher + ((remaining) ? remaining.split('').reverse().join('') : (placeholder || '')) + result;\r\n            } else {\r\n                const finisher  = mask.substring(c+1).replace(/[?*]/gim,'');\r\n\t\t\t    return result + ((remaining) ? remaining : (placeholder || '')) + finisher;\r\n            }\r\n\t\t\t\r\n\t\t  default:\r\n\r\n            if(reverse) result = mask.charAt(c) + result;\r\n            else        result += mask.charAt(c);\r\n\r\n            break;\r\n\t\t  \r\n\t  }\r\n\t}\r\n\t\r\n\tconst last = reverse ? result.charAt(0) : result.charAt(result.length-1);\r\n    if(reverse && last !== target.charAt(index-1) && last !== mask.charAt(0) && last !== placeholder) {\r\n        result = result.substring(1);\r\n    } else if(!reverse && last !== target.charAt(index-1) && last !== mask.charAt(mask.length-1) && last !== placeholder) {\r\n        result = result.slice(0,-1);\r\n    }\r\n\t\r\n\treturn result;\r\n\r\n}\r\n\r\nexport function applyMask(target, config) {\r\n\r\n    return mask(target, config.mask, config.filter, config.mode, config.placeholder);\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}