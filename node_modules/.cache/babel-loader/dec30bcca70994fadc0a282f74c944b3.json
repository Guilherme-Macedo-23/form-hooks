{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilh\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\form\\\\form\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from \"react-select\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport MaskedInput from './MaskedInput';\nimport * as yup from \"yup\";\nimport '../styles/form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  cnpj: ''\n};\nconst options = [{\n  value: \"12345\",\n  label: \"Nome Exemplo da fazenda\"\n}];\nconst optionsLab = [{\n  value: \"1234\",\n  label: \"Laboratorio exemplo\"\n}];\nconst schema = yup.object().shape({\n  infosPropriedade: yup.object().shape({\n    label: yup.string().required(\"status is required (from label)\"),\n    value: yup.string().required(\"status is required\")\n  }).nullable().required(\"status is required (from outter null check)\")\n});\nexport default function Form(_ref) {\n  _s();\n\n  var _errors$title, _errors$title2, _errors$title3, _errors$description, _errors$content;\n\n  let {} = _ref;\n  const [values, setValues] = useState(initialValues);\n\n  function handleChange(event) {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  const {\n    handleSubmit,\n    control,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Criar postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-post\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                ...register(\"nome\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Data Inicial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"title\",\n                ...register(\"dataIni\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title2 = errors.title) === null || _errors$title2 === void 0 ? void 0 : _errors$title2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Data Final\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"title\",\n                ...register(\"dataFin\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title3 = errors.title) === null || _errors$title3 === void 0 ? void 0 : _errors$title3.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Info Propriedade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"infosPropriedade\",\n                control: control,\n                render: _ref2 => {\n                  let {\n                    field\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Select, { ...field,\n                    isClearable: true,\n                    isSearchable: false,\n                    className: \"react-dropdown\",\n                    classNamePrefix: \"dropdown\",\n                    options: options\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"CNPJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MaskedInput, {\n                name: \"cnpj\",\n                mask: \"99.999.999/9999-99\",\n                value: values.cnpj,\n                onChange: handleChange,\n                ...register(\"cnpj\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Laborat\\xF3rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"laboratorio\",\n                control: control,\n                render: _ref3 => {\n                  let {\n                    field\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(Select, { ...field,\n                    isClearable: true,\n                    isSearchable: false,\n                    className: \"react-dropdown\",\n                    classNamePrefix: \"dropdown\",\n                    options: optionsLab\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Observa\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                name: \"content\",\n                ...register(\"observacao\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$content = errors.content) === null || _errors$content === void 0 ? void 0 : _errors$content.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n} // import React, { useState } from 'react'\n// import { useForm } from 'react-hook-form'\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import * as yup from \"yup\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import Select from \"react-select\";\n// import '../styles/form.css'\n// const validationPost = yup.object().shape({\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\n// })\n// function Post() {\n//     const { register, handleSubmit, formState: { errors } } = useForm({\n//         resolver: yupResolver(validationPost)\n//     })\n//     const [dataIni, setDataIni] = useState(null)\n//     const [dataFin, setDataFin] = useState(null)\n//     const [items] = React.useState([\n//         { id: \"1\", name: \"First Element\" },\n//         { id: \"2\", name: \"Second Element\" },\n//         { id: \"3\", name: \"Third Element\" }\n//     ]);\n//     const options = [\n//         { value: \"active\", label: \"Active\" },\n//         { value: \"inactive\", label: \"In Active\" },\n//         { value: \"deleted\", label: \"Delete\" }\n//       ];\n//     const addPost = data => console.log(data)\n//     return (\n//         <div>\n// <main>\n//     <div className=\"card-post\" >\n//         <h1>Criar postagem</h1>\n//         <div className=\"line-post\" ></div>\n//         <div className=\"card-body-post\" >\n//             <form onSubmit={handleSubmit(addPost)} >\n//                 <div className=\"fields\" >\n//                     <label>Nome</label>\n//                     <input type=\"text\" name=\"title\" {...register(\"title\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Data Inicial</label>\n//                     <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Data Final</label>\n//                     <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Info Propriedade</label>\n//                     <Select\n//                      {...register}\n//                         isClearable \n//                         isSearchable={false}\n//                         className=\"react-dropdown\"\n//                         classNamePrefix=\"dropdown\"\n//                         options={options}\n//                     />\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>CNPJ</label>\n//                     <input type=\"text\" name=\"description\" {...register(\"description\")} />\n//                     <p className=\"error-message\">{errors.description?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Laboratório</label>\n//                     <Select\n//                         isClearable \n//                         isSearchable={false}\n//                         className=\"react-dropdown\"\n//                         classNamePrefix=\"dropdown\"\n//                         options={options}\n//                     />\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Observações</label>\n//                     <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\n//                     <p className=\"error-message\">{errors.content?.message}</p>\n//                 </div>\n//                 <div className=\"btn-post\" >\n//                     <button type=\"submit\" >Enviar</button>\n//                 </div>\n//             </form>\n//         </div>\n//     </div>\n// </main>\n//         </div>\n//     )\n// }\n// export default Post\n\n_s(Form, \"++nGYNq+pm2hAjCDydHZ6FMbr7g=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Select","useForm","Controller","yupResolver","MaskedInput","yup","initialValues","cnpj","options","value","label","optionsLab","schema","object","shape","infosPropriedade","string","required","nullable","Form","values","setValues","handleChange","event","target","name","handleSubmit","control","register","formState","errors","resolver","onSubmit","data","console","log","title","message","field","description","content"],"sources":["C:/Users/Guilh/OneDrive/Área de Trabalho/form/form/src/components/form.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Select from \"react-select\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport MaskedInput from './MaskedInput';\r\nimport * as yup from \"yup\";\r\n\r\nimport '../styles/form.css'\r\n\r\nconst initialValues = {\r\n    cnpj: ''\r\n};\r\n\r\nconst options = [\r\n    { value: \"12345\", label: \"Nome Exemplo da fazenda\" },\r\n];\r\n\r\nconst optionsLab = [\r\n    { value: \"1234\", label: \"Laboratorio exemplo\" },\r\n];\r\n\r\nconst schema = yup.object().shape({\r\n    infosPropriedade: yup\r\n        .object()\r\n        .shape({\r\n            label: yup.string().required(\"status is required (from label)\"),\r\n            value: yup.string().required(\"status is required\")\r\n        })\r\n        .nullable()\r\n        .required(\"status is required (from outter null check)\")\r\n});\r\n\r\nexport default function Form({ }) {\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    function handleChange(event) {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const { handleSubmit, control, register, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <main>\r\n\r\n                <div className=\"card-post\" >\r\n\r\n                    <h1>Criar postagem</h1>\r\n                    <div className=\"line-post\" ></div>\r\n\r\n                    <div className=\"card-body-post\" >\r\n\r\n\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Nome</label>\r\n                                <input type=\"text\" name=\"title\" {...register(\"nome\")} />\r\n                                <p className=\"error-message\">{errors.title?.message}</p>\r\n                            </div>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Data Inicial</label>\r\n                                <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\r\n                                <p className=\"error-message\">{errors.title?.message}</p>\r\n                            </div>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Data Final</label>\r\n                                <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\r\n                                <p className=\"error-message\">{errors.title?.message}</p>\r\n                            </div>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Info Propriedade</label>\r\n                                <Controller\r\n                                    name=\"infosPropriedade\"\r\n                                    control={control}\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            isClearable\r\n                                            isSearchable={false}\r\n                                            className=\"react-dropdown\"\r\n                                            classNamePrefix=\"dropdown\"\r\n                                            options={options}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                            <div className=\"fields\" >\r\n                                <label>CNPJ</label>\r\n                                <MaskedInput\r\n                                    name=\"cnpj\"\r\n                                    mask=\"99.999.999/9999-99\"\r\n                                    value={values.cnpj}\r\n                                    onChange={handleChange}\r\n                                    {...register(\"cnpj\")}\r\n                                />\r\n                                <p className=\"error-message\">{errors.description?.message}</p>\r\n                            </div>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Laboratório</label>\r\n                                <Controller\r\n                                    name=\"laboratorio\"\r\n                                    control={control}\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            {...field}\r\n                                            isClearable\r\n                                            isSearchable={false}\r\n                                            className=\"react-dropdown\"\r\n                                            classNamePrefix=\"dropdown\"\r\n                                            options={optionsLab}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"fields\" >\r\n                                <label>Observações</label>\r\n                                <textarea type=\"text\" name=\"content\" {...register(\"observacao\")} ></textarea>\r\n                                <p className=\"error-message\">{errors.content?.message}</p>\r\n                            </div>\r\n\r\n                            <div className=\"btn-post\" >\r\n                                <button type=\"submit\" >Enviar</button>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// import { useForm } from 'react-hook-form'\r\n// import { yupResolver } from '@hookform/resolvers/yup';\r\n// import * as yup from \"yup\";\r\n\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// import Select from \"react-select\";\r\n\r\n// import '../styles/form.css'\r\n\r\n// const validationPost = yup.object().shape({\r\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\r\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\r\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\r\n// })\r\n\r\n// function Post() {\r\n\r\n//     const { register, handleSubmit, formState: { errors } } = useForm({\r\n//         resolver: yupResolver(validationPost)\r\n//     })\r\n\r\n//     const [dataIni, setDataIni] = useState(null)\r\n//     const [dataFin, setDataFin] = useState(null)\r\n\r\n//     const [items] = React.useState([\r\n//         { id: \"1\", name: \"First Element\" },\r\n//         { id: \"2\", name: \"Second Element\" },\r\n//         { id: \"3\", name: \"Third Element\" }\r\n//     ]);\r\n\r\n//     const options = [\r\n//         { value: \"active\", label: \"Active\" },\r\n//         { value: \"inactive\", label: \"In Active\" },\r\n//         { value: \"deleted\", label: \"Delete\" }\r\n//       ];\r\n\r\n//     const addPost = data => console.log(data)\r\n\r\n//     return (\r\n//         <div>\r\n\r\n            // <main>\r\n\r\n            //     <div className=\"card-post\" >\r\n\r\n            //         <h1>Criar postagem</h1>\r\n            //         <div className=\"line-post\" ></div>\r\n\r\n            //         <div className=\"card-body-post\" >\r\n\r\n            //             <form onSubmit={handleSubmit(addPost)} >\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Nome</label>\r\n            //                     <input type=\"text\" name=\"title\" {...register(\"title\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Data Inicial</label>\r\n            //                     <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Data Final</label>\r\n            //                     <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Info Propriedade</label>\r\n            //                     <Select\r\n            //                      {...register}\r\n            //                         isClearable \r\n            //                         isSearchable={false}\r\n            //                         className=\"react-dropdown\"\r\n            //                         classNamePrefix=\"dropdown\"\r\n            //                         options={options}\r\n            //                     />\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>CNPJ</label>\r\n            //                     <input type=\"text\" name=\"description\" {...register(\"description\")} />\r\n            //                     <p className=\"error-message\">{errors.description?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Laboratório</label>\r\n            //                     <Select\r\n            //                         isClearable \r\n            //                         isSearchable={false}\r\n            //                         className=\"react-dropdown\"\r\n            //                         classNamePrefix=\"dropdown\"\r\n            //                         options={options}\r\n            //                     />\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Observações</label>\r\n            //                     <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\r\n            //                     <p className=\"error-message\">{errors.content?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"btn-post\" >\r\n            //                     <button type=\"submit\" >Enviar</button>\r\n            //                 </div>\r\n\r\n            //             </form>\r\n\r\n            //         </div>\r\n\r\n            //     </div>\r\n\r\n            // </main>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}