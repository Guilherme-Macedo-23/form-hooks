{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilh\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\form\\\\form\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from \"react-select\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport DocNumber from './DocNumber';\nimport '../styles/form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"12345\",\n  label: \"Nome Exemplo da fazenda\"\n}];\nconst optionsLab = [{\n  value: \"1234\",\n  label: \"Laboratorio exemplo\"\n}];\nconst schema = yup.object().shape({\n  infosPropriedade: yup.object().shape({\n    label: yup.string().required(\"status is required (from label)\"),\n    value: yup.string().required(\"status is required\")\n  }).nullable().required(\"status is required (from outter null check)\")\n});\nexport default function Form() {\n  _s();\n\n  var _errors$title, _errors$title2, _errors$title3, _errors$description, _errors$content;\n\n  const [state] = useState(null);\n  const {\n    handleSubmit,\n    control,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Criar postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-post\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                ...register(\"nome\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Data Inicial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"title\",\n                ...register(\"dataIni\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title2 = errors.title) === null || _errors$title2 === void 0 ? void 0 : _errors$title2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Data Final\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"title\",\n                ...register(\"dataFin\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$title3 = errors.title) === null || _errors$title3 === void 0 ? void 0 : _errors$title3.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Info Propriedade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"infosPropriedade\",\n                control: control,\n                render: _ref => {\n                  let {\n                    field\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(Select, { ...field,\n                    isClearable: true,\n                    isSearchable: false,\n                    className: \"react-dropdown\",\n                    classNamePrefix: \"dropdown\",\n                    options: options\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 13\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"CNPJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DocNumber, {\n                value: this.state.doc_number,\n                name: \"doc_number\",\n                placeholder: \"CPF/CNPJ\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Laborat\\xF3rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"laboratorio\",\n                control: control,\n                render: _ref2 => {\n                  let {\n                    field\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Select, { ...field,\n                    isClearable: true,\n                    isSearchable: false,\n                    className: \"react-dropdown\",\n                    classNamePrefix: \"dropdown\",\n                    options: optionsLab\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 13\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Observa\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                name: \"content\",\n                ...register(\"observacao\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: (_errors$content = errors.content) === null || _errors$content === void 0 ? void 0 : _errors$content.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // import React, { useState } from 'react'\n// import { useForm } from 'react-hook-form'\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import * as yup from \"yup\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import Select from \"react-select\";\n// import '../styles/form.css'\n// const validationPost = yup.object().shape({\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\n// })\n// function Post() {\n//     const { register, handleSubmit, formState: { errors } } = useForm({\n//         resolver: yupResolver(validationPost)\n//     })\n//     const [dataIni, setDataIni] = useState(null)\n//     const [dataFin, setDataFin] = useState(null)\n//     const [items] = React.useState([\n//         { id: \"1\", name: \"First Element\" },\n//         { id: \"2\", name: \"Second Element\" },\n//         { id: \"3\", name: \"Third Element\" }\n//     ]);\n//     const options = [\n//         { value: \"active\", label: \"Active\" },\n//         { value: \"inactive\", label: \"In Active\" },\n//         { value: \"deleted\", label: \"Delete\" }\n//       ];\n//     const addPost = data => console.log(data)\n//     return (\n//         <div>\n// <main>\n//     <div className=\"card-post\" >\n//         <h1>Criar postagem</h1>\n//         <div className=\"line-post\" ></div>\n//         <div className=\"card-body-post\" >\n//             <form onSubmit={handleSubmit(addPost)} >\n//                 <div className=\"fields\" >\n//                     <label>Nome</label>\n//                     <input type=\"text\" name=\"title\" {...register(\"title\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Data Inicial</label>\n//                     <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Data Final</label>\n//                     <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\n//                     <p className=\"error-message\">{errors.title?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Info Propriedade</label>\n//                     <Select\n//                      {...register}\n//                         isClearable \n//                         isSearchable={false}\n//                         className=\"react-dropdown\"\n//                         classNamePrefix=\"dropdown\"\n//                         options={options}\n//                     />\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>CNPJ</label>\n//                     <input type=\"text\" name=\"description\" {...register(\"description\")} />\n//                     <p className=\"error-message\">{errors.description?.message}</p>\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Laboratório</label>\n//                     <Select\n//                         isClearable \n//                         isSearchable={false}\n//                         className=\"react-dropdown\"\n//                         classNamePrefix=\"dropdown\"\n//                         options={options}\n//                     />\n//                 </div>\n//                 <div className=\"fields\" >\n//                     <label>Observações</label>\n//                     <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\n//                     <p className=\"error-message\">{errors.content?.message}</p>\n//                 </div>\n//                 <div className=\"btn-post\" >\n//                     <button type=\"submit\" >Enviar</button>\n//                 </div>\n//             </form>\n//         </div>\n//     </div>\n// </main>\n//         </div>\n//     )\n// }\n// export default Post\n\n_s(Form, \"8cgc6sleNVZo4wQDr85M37LiINA=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Select","useForm","Controller","yupResolver","yup","DocNumber","options","value","label","optionsLab","schema","object","shape","infosPropriedade","string","required","nullable","Form","state","handleSubmit","control","register","formState","errors","resolver","onSubmit","data","console","log","title","message","field","doc_number","handleChange","description","content"],"sources":["C:/Users/Guilh/OneDrive/Área de Trabalho/form/form/src/components/form.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Select from \"react-select\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport DocNumber from './DocNumber';\r\n\r\nimport '../styles/form.css'\r\n\r\nconst options = [\r\n  { value: \"12345\", label: \"Nome Exemplo da fazenda\" },\r\n];\r\n\r\nconst optionsLab = [\r\n  { value: \"1234\", label: \"Laboratorio exemplo\" },\r\n];\r\n\r\nconst schema = yup.object().shape({\r\n    infosPropriedade: yup\r\n    .object()\r\n    .shape({\r\n      label: yup.string().required(\"status is required (from label)\"),\r\n      value: yup.string().required(\"status is required\")\r\n    })\r\n    .nullable() \r\n    .required(\"status is required (from outter null check)\")\r\n});\r\n\r\n\r\nexport default function Form() {\r\n\r\n   const [state]  = useState(null)\r\n \r\n  \r\n\r\n\r\n  const {handleSubmit, control, register, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n  return (\r\n    <div className=\"App\">\r\n        <main>\r\n\r\n<div className=\"card-post\" >\r\n\r\n    <h1>Criar postagem</h1>\r\n    <div className=\"line-post\" ></div>\r\n\r\n    <div className=\"card-body-post\" >\r\n\r\n       \r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n    <div className=\"fields\" >\r\n                <label>Nome</label>\r\n                <input type=\"text\" name=\"title\" {...register(\"nome\")} />\r\n                <p className=\"error-message\">{errors.title?.message}</p>\r\n            </div>\r\n\r\n            <div className=\"fields\" >\r\n                <label>Data Inicial</label>\r\n                <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\r\n                <p className=\"error-message\">{errors.title?.message}</p>\r\n            </div>\r\n\r\n            <div className=\"fields\" >\r\n                <label>Data Final</label>\r\n                <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\r\n                <p className=\"error-message\">{errors.title?.message}</p>\r\n            </div>\r\n\r\n            <div className=\"fields\" >\r\n                <label>Info Propriedade</label>\r\n                <Controller\r\n          name=\"infosPropriedade\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <Select\r\n              {...field}\r\n              isClearable \r\n              isSearchable={false}\r\n              className=\"react-dropdown\"\r\n              classNamePrefix=\"dropdown\"\r\n              options={options}\r\n            />\r\n          )}\r\n        />\r\n            </div>\r\n            <div className=\"fields\" >\r\n                <label>CNPJ</label>\r\n                <DocNumber\r\n          value={this.state.doc_number}\r\n          name=\"doc_number\"\r\n          placeholder=\"CPF/CNPJ\"\r\n          onChange={this.handleChange}\r\n        />\r\n                <p className=\"error-message\">{errors.description?.message}</p>\r\n            </div>\r\n\r\n            <div className=\"fields\" >\r\n                <label>Laboratório</label>\r\n                <Controller\r\n          name=\"laboratorio\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <Select\r\n              {...field}\r\n              isClearable \r\n              isSearchable={false}\r\n              className=\"react-dropdown\"\r\n              classNamePrefix=\"dropdown\"\r\n              options={optionsLab}\r\n            />\r\n          )}\r\n        />\r\n            </div>\r\n\r\n            <div className=\"fields\" >\r\n                <label>Observações</label>\r\n                <textarea type=\"text\" name=\"content\" {...register(\"observacao\")} ></textarea>\r\n                <p className=\"error-message\">{errors.content?.message}</p>\r\n            </div>\r\n\r\n            <div className=\"btn-post\" >\r\n                <button type=\"submit\" >Enviar</button>\r\n            </div>\r\n\r\n      \r\n      </form>\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n</main>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// import { useForm } from 'react-hook-form'\r\n// import { yupResolver } from '@hookform/resolvers/yup';\r\n// import * as yup from \"yup\";\r\n\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// import Select from \"react-select\";\r\n\r\n// import '../styles/form.css'\r\n\r\n// const validationPost = yup.object().shape({\r\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\r\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\r\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\r\n// })\r\n\r\n// function Post() {\r\n\r\n//     const { register, handleSubmit, formState: { errors } } = useForm({\r\n//         resolver: yupResolver(validationPost)\r\n//     })\r\n\r\n//     const [dataIni, setDataIni] = useState(null)\r\n//     const [dataFin, setDataFin] = useState(null)\r\n\r\n//     const [items] = React.useState([\r\n//         { id: \"1\", name: \"First Element\" },\r\n//         { id: \"2\", name: \"Second Element\" },\r\n//         { id: \"3\", name: \"Third Element\" }\r\n//     ]);\r\n\r\n//     const options = [\r\n//         { value: \"active\", label: \"Active\" },\r\n//         { value: \"inactive\", label: \"In Active\" },\r\n//         { value: \"deleted\", label: \"Delete\" }\r\n//       ];\r\n\r\n//     const addPost = data => console.log(data)\r\n\r\n//     return (\r\n//         <div>\r\n\r\n            // <main>\r\n\r\n            //     <div className=\"card-post\" >\r\n\r\n            //         <h1>Criar postagem</h1>\r\n            //         <div className=\"line-post\" ></div>\r\n\r\n            //         <div className=\"card-body-post\" >\r\n\r\n            //             <form onSubmit={handleSubmit(addPost)} >\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Nome</label>\r\n            //                     <input type=\"text\" name=\"title\" {...register(\"title\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Data Inicial</label>\r\n            //                     <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Data Final</label>\r\n            //                     <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\r\n            //                     <p className=\"error-message\">{errors.title?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Info Propriedade</label>\r\n            //                     <Select\r\n            //                      {...register}\r\n            //                         isClearable \r\n            //                         isSearchable={false}\r\n            //                         className=\"react-dropdown\"\r\n            //                         classNamePrefix=\"dropdown\"\r\n            //                         options={options}\r\n            //                     />\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>CNPJ</label>\r\n            //                     <input type=\"text\" name=\"description\" {...register(\"description\")} />\r\n            //                     <p className=\"error-message\">{errors.description?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Laboratório</label>\r\n            //                     <Select\r\n            //                         isClearable \r\n            //                         isSearchable={false}\r\n            //                         className=\"react-dropdown\"\r\n            //                         classNamePrefix=\"dropdown\"\r\n            //                         options={options}\r\n            //                     />\r\n            //                 </div>\r\n\r\n            //                 <div className=\"fields\" >\r\n            //                     <label>Observações</label>\r\n            //                     <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\r\n            //                     <p className=\"error-message\">{errors.content?.message}</p>\r\n            //                 </div>\r\n\r\n            //                 <div className=\"btn-post\" >\r\n            //                     <button type=\"submit\" >Enviar</button>\r\n            //                 </div>\r\n\r\n            //             </form>\r\n\r\n            //         </div>\r\n\r\n            //     </div>\r\n\r\n            // </main>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}