{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilh\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\form\\\\form\\\\src\\\\components\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport Select from \"react-select\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: \"active\",\n  label: \"Active\"\n}, {\n  value: \"inactive\",\n  label: \"In Active\"\n}, {\n  value: \"deleted\",\n  label: \"Delete\"\n}];\nconst schema = yup.object().shape({\n  status: yup.object().shape({\n    label: yup.string().required(\"status is required (from label)\"),\n    value: yup.string().required(\"status is required\")\n  }).nullable() // for handling null value when clearing options via clicking \"x\"\n  .required(\"status is required (from outter null check)\")\n});\nexport default function Form() {\n  _s();\n\n  var _errors$status, _errors$status2;\n\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"status\",\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Select // defaultValue={options[0]}\n          , { ...field,\n            isClearable: true // enable isClearable to demonstrate extra error handling\n            ,\n            isSearchable: false,\n            className: \"react-dropdown\",\n            classNamePrefix: \"dropdown\",\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ((_errors$status = errors.status) === null || _errors$status === void 0 ? void 0 : _errors$status.message) || ((_errors$status2 = errors.status) === null || _errors$status2 === void 0 ? void 0 : _errors$status2.label.message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} // import React, { useState } from 'react'\n// import { useForm } from 'react-hook-form'\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import * as yup from \"yup\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import Select from \"react-select\";\n// import '../styles/form.css'\n// const validationPost = yup.object().shape({\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\n// })\n// function Post() {\n//     const { register, handleSubmit, formState: { errors } } = useForm({\n//         resolver: yupResolver(validationPost)\n//     })\n//     const [dataIni, setDataIni] = useState(null)\n//     const [dataFin, setDataFin] = useState(null)\n//     const [items] = React.useState([\n//         { id: \"1\", name: \"First Element\" },\n//         { id: \"2\", name: \"Second Element\" },\n//         { id: \"3\", name: \"Third Element\" }\n//     ]);\n//     const options = [\n//         { value: \"active\", label: \"Active\" },\n//         { value: \"inactive\", label: \"In Active\" },\n//         { value: \"deleted\", label: \"Delete\" }\n//       ];\n//     const addPost = data => console.log(data)\n//     return (\n//         <div>\n//             <main>\n//                 <div className=\"card-post\" >\n//                     <h1>Criar postagem</h1>\n//                     <div className=\"line-post\" ></div>\n//                     <div className=\"card-body-post\" >\n//                         <form onSubmit={handleSubmit(addPost)} >\n//                             <div className=\"fields\" >\n//                                 <label>Nome</label>\n//                                 <input type=\"text\" name=\"title\" {...register(\"title\")} />\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>Data Inicial</label>\n//                                 <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>Data Final</label>\n//                                 <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>Info Propriedade</label>\n//                                 <Select\n//                                  {...register}\n//                                     isClearable \n//                                     isSearchable={false}\n//                                     className=\"react-dropdown\"\n//                                     classNamePrefix=\"dropdown\"\n//                                     options={options}\n//                                 />\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>CNPJ</label>\n//                                 <input type=\"text\" name=\"description\" {...register(\"description\")} />\n//                                 <p className=\"error-message\">{errors.description?.message}</p>\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>Laboratório</label>\n//                                 <Select\n//                                     isClearable \n//                                     isSearchable={false}\n//                                     className=\"react-dropdown\"\n//                                     classNamePrefix=\"dropdown\"\n//                                     options={options}\n//                                 />\n//                             </div>\n//                             <div className=\"fields\" >\n//                                 <label>Observações</label>\n//                                 <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\n//                                 <p className=\"error-message\">{errors.content?.message}</p>\n//                             </div>\n//                             <div className=\"btn-post\" >\n//                                 <button type=\"submit\" >Enviar</button>\n//                             </div>\n//                         </form>\n//                     </div>\n//                 </div>\n//             </main>\n//         </div>\n//     )\n// }\n// export default Post\n\n_s(Form, \"lSkayeH1eX0XKwJJ2wjh+xu9DXY=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Select","useForm","Controller","yupResolver","yup","options","value","label","schema","object","shape","status","string","required","nullable","Form","handleSubmit","control","formState","errors","resolver","onSubmit","data","console","log","field","message"],"sources":["C:/Users/Guilh/OneDrive/Área de Trabalho/form/form/src/components/form.js"],"sourcesContent":["import Select from \"react-select\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst options = [\r\n  { value: \"active\", label: \"Active\" },\r\n  { value: \"inactive\", label: \"In Active\" },\r\n  { value: \"deleted\", label: \"Delete\" }\r\n];\r\n\r\nconst schema = yup.object().shape({\r\n  status: yup\r\n    .object()\r\n    .shape({\r\n      label: yup.string().required(\"status is required (from label)\"),\r\n      value: yup.string().required(\"status is required\")\r\n    })\r\n    .nullable() // for handling null value when clearing options via clicking \"x\"\r\n    .required(\"status is required (from outter null check)\")\r\n});\r\n\r\nexport default function Form() {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller\r\n          name=\"status\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <Select\r\n              // defaultValue={options[0]}\r\n              {...field}\r\n              isClearable // enable isClearable to demonstrate extra error handling\r\n              isSearchable={false}\r\n              className=\"react-dropdown\"\r\n              classNamePrefix=\"dropdown\"\r\n              options={options}\r\n            />\r\n          )}\r\n        />\r\n        <p>{errors.status?.message || errors.status?.label.message}</p>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// import { useForm } from 'react-hook-form'\r\n// import { yupResolver } from '@hookform/resolvers/yup';\r\n// import * as yup from \"yup\";\r\n\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// import Select from \"react-select\";\r\n\r\n// import '../styles/form.css'\r\n\r\n// const validationPost = yup.object().shape({\r\n//     title: yup.string().required(\"O título é obrigatório\").max(40, \"O título precisa ter menosde 40 caracteres\"),\r\n//     description: yup.string().required(\"A descrição é obrigatório\").max(150, \"A descrição precisa ter menosde 150 caracteres\"),\r\n//     content: yup.string().required(\"O conteúdo é obrigatório\").max(500, \"O conteúdo precisa ter menosde 500 caracteres\")\r\n// })\r\n\r\n// function Post() {\r\n\r\n//     const { register, handleSubmit, formState: { errors } } = useForm({\r\n//         resolver: yupResolver(validationPost)\r\n//     })\r\n\r\n//     const [dataIni, setDataIni] = useState(null)\r\n//     const [dataFin, setDataFin] = useState(null)\r\n\r\n//     const [items] = React.useState([\r\n//         { id: \"1\", name: \"First Element\" },\r\n//         { id: \"2\", name: \"Second Element\" },\r\n//         { id: \"3\", name: \"Third Element\" }\r\n//     ]);\r\n\r\n//     const options = [\r\n//         { value: \"active\", label: \"Active\" },\r\n//         { value: \"inactive\", label: \"In Active\" },\r\n//         { value: \"deleted\", label: \"Delete\" }\r\n//       ];\r\n\r\n//     const addPost = data => console.log(data)\r\n\r\n//     return (\r\n//         <div>\r\n\r\n//             <main>\r\n\r\n//                 <div className=\"card-post\" >\r\n\r\n//                     <h1>Criar postagem</h1>\r\n//                     <div className=\"line-post\" ></div>\r\n\r\n//                     <div className=\"card-body-post\" >\r\n\r\n//                         <form onSubmit={handleSubmit(addPost)} >\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Nome</label>\r\n//                                 <input type=\"text\" name=\"title\" {...register(\"title\")} />\r\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Data Inicial</label>\r\n//                                 <input type=\"date\" name=\"title\" {...register(\"dataIni\")} />\r\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Data Final</label>\r\n//                                 <input type=\"date\" name=\"title\" {...register(\"dataFin\")} />\r\n//                                 <p className=\"error-message\">{errors.title?.message}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Info Propriedade</label>\r\n//                                 <Select\r\n//                                  {...register}\r\n//                                     isClearable \r\n//                                     isSearchable={false}\r\n//                                     className=\"react-dropdown\"\r\n//                                     classNamePrefix=\"dropdown\"\r\n//                                     options={options}\r\n//                                 />\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>CNPJ</label>\r\n//                                 <input type=\"text\" name=\"description\" {...register(\"description\")} />\r\n//                                 <p className=\"error-message\">{errors.description?.message}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Laboratório</label>\r\n//                                 <Select\r\n//                                     isClearable \r\n//                                     isSearchable={false}\r\n//                                     className=\"react-dropdown\"\r\n//                                     classNamePrefix=\"dropdown\"\r\n//                                     options={options}\r\n//                                 />\r\n//                             </div>\r\n\r\n//                             <div className=\"fields\" >\r\n//                                 <label>Observações</label>\r\n//                                 <textarea type=\"text\" name=\"content\" {...register(\"content\")} ></textarea>\r\n//                                 <p className=\"error-message\">{errors.content?.message}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"btn-post\" >\r\n//                                 <button type=\"submit\" >Enviar</button>\r\n//                             </div>\r\n\r\n//                         </form>\r\n\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//             </main>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}